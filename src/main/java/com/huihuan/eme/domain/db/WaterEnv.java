package com.huihuan.eme.domain.db;
// Generated 2016-2-6 13:14:08 by Hibernate Tools 3.2.2.GA


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * WaterEnv generated by hbm2java
 */
@Entity
@Table(name="water_env"
    ,catalog="eme"
)
public class WaterEnv  implements java.io.Serializable {


     private WaterEnvId id;
     private WaterEnvType waterEnvType;
     private EnvFunc envFunc;

    public WaterEnv() {
    }

	
    public WaterEnv(WaterEnvId id) {
        this.id = id;
    }
    public WaterEnv(WaterEnvId id, WaterEnvType waterEnvType, EnvFunc envFunc) {
       this.id = id;
       this.waterEnvType = waterEnvType;
       this.envFunc = envFunc;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="waterEnvName", column=@Column(name="water_env_name", length=64) ), 
        @AttributeOverride(name="lat", column=@Column(name="lat", precision=12, scale=0) ), 
        @AttributeOverride(name="lng", column=@Column(name="lng", precision=12, scale=0) ), 
        @AttributeOverride(name="emePerson", column=@Column(name="eme_person", length=20) ), 
        @AttributeOverride(name="emeMobile", column=@Column(name="eme_mobile", length=20) ), 
        @AttributeOverride(name="idWaterEnvType", column=@Column(name="id_water_env_type") ), 
        @AttributeOverride(name="idEnvFunc", column=@Column(name="id_env_func") ) } )
    public WaterEnvId getId() {
        return this.id;
    }
    
    public void setId(WaterEnvId id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_water_env_type", insertable=false, updatable=false)
    public WaterEnvType getWaterEnvType() {
        return this.waterEnvType;
    }
    
    public void setWaterEnvType(WaterEnvType waterEnvType) {
        this.waterEnvType = waterEnvType;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_env_func", insertable=false, updatable=false)
    public EnvFunc getEnvFunc() {
        return this.envFunc;
    }
    
    public void setEnvFunc(EnvFunc envFunc) {
        this.envFunc = envFunc;
    }




}


