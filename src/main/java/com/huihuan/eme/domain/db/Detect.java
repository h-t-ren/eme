package com.huihuan.eme.domain.db;
// Generated 2016-2-6 13:14:08 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Detect generated by hbm2java
 */
@Entity
@Table(name="detect"
    ,catalog="eme"
)
public class Detect  implements java.io.Serializable {


     private DetectId id;
     private DataCollectionDevice dataCollectionDevice;
     private DetectStation detectStation;
     private DetectFactor detectFactor;
     private Date detectTime;
     private Float val;

    public Detect() {
    }

	
    public Detect(DetectId id, DetectStation detectStation, DetectFactor detectFactor) {
        this.id = id;
        this.detectStation = detectStation;
        this.detectFactor = detectFactor;
    }
    public Detect(DetectId id, DataCollectionDevice dataCollectionDevice, DetectStation detectStation, DetectFactor detectFactor, Date detectTime, Float val) {
       this.id = id;
       this.dataCollectionDevice = dataCollectionDevice;
       this.detectStation = detectStation;
       this.detectFactor = detectFactor;
       this.detectTime = detectTime;
       this.val = val;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="idDetectStation", column=@Column(name="id_detect_station", nullable=false) ), 
        @AttributeOverride(name="idDetectFactor", column=@Column(name="id_detect_factor", nullable=false) ) } )
    public DetectId getId() {
        return this.id;
    }
    
    public void setId(DetectId id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="mn")
    public DataCollectionDevice getDataCollectionDevice() {
        return this.dataCollectionDevice;
    }
    
    public void setDataCollectionDevice(DataCollectionDevice dataCollectionDevice) {
        this.dataCollectionDevice = dataCollectionDevice;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_detect_station", nullable=false, insertable=false, updatable=false)
    public DetectStation getDetectStation() {
        return this.detectStation;
    }
    
    public void setDetectStation(DetectStation detectStation) {
        this.detectStation = detectStation;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_detect_factor", nullable=false, insertable=false, updatable=false)
    public DetectFactor getDetectFactor() {
        return this.detectFactor;
    }
    
    public void setDetectFactor(DetectFactor detectFactor) {
        this.detectFactor = detectFactor;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="detect_time", length=19)
    public Date getDetectTime() {
        return this.detectTime;
    }
    
    public void setDetectTime(Date detectTime) {
        this.detectTime = detectTime;
    }
    
    @Column(name="val", precision=12, scale=0)
    public Float getVal() {
        return this.val;
    }
    
    public void setVal(Float val) {
        this.val = val;
    }




}


